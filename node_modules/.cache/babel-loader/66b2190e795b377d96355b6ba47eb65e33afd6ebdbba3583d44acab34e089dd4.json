{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VIJAY\\\\Desktop\\\\Hima\\\\Exam\\\\project\\\\dynamic-form-generator\\\\src\\\\components\\\\FormPreview.tsx\";\n// FormPreview.tsx\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormPreview = ({\n  schema,\n  formData,\n  setFormData\n}) => {\n  // Your existing logic for form preview rendering\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: schema && schema.fields ? schema.fields.map((field, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: field.name,\n        className: \"block font-medium\",\n        children: field.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: field.name,\n        name: field.name,\n        type: field.type,\n        value: formData[field.name] || '',\n        onChange: e => setFormData({\n          ...formData,\n          [field.name]: e.target.value\n        }),\n        className: \"w-full p-2 border border-gray-300 rounded-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No schema provided\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = FormPreview;\nexport default FormPreview;\nvar _c;\n$RefreshReg$(_c, \"FormPreview\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","FormPreview","schema","formData","setFormData","children","fields","map","field","index","className","htmlFor","name","label","fileName","_jsxFileName","lineNumber","columnNumber","id","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/VIJAY/Desktop/Hima/Exam/project/dynamic-form-generator/src/components/FormPreview.tsx"],"sourcesContent":["// FormPreview.tsx\r\n\r\nimport React from 'react';\r\n\r\ninterface FormPreviewProps {\r\n  schema: any;\r\n  formData: any;\r\n  setFormData: React.Dispatch<React.SetStateAction<any>>; // Add this line\r\n}\r\n\r\nconst FormPreview: React.FC<FormPreviewProps> = ({ schema, formData, setFormData }) => {\r\n  // Your existing logic for form preview rendering\r\n  \r\n  return (\r\n    <div>\r\n      {/* Render form fields based on schema and manage formData */}\r\n      {schema && schema.fields ? (\r\n        schema.fields.map((field: any, index: number) => (\r\n          <div key={index} className=\"mb-4\">\r\n            <label htmlFor={field.name} className=\"block font-medium\">\r\n              {field.label}\r\n            </label>\r\n            <input\r\n              id={field.name}\r\n              name={field.name}\r\n              type={field.type}\r\n              value={formData[field.name] || ''}\r\n              onChange={(e) => setFormData({ ...formData, [field.name]: e.target.value })}\r\n              className=\"w-full p-2 border border-gray-300 rounded-lg\"\r\n            />\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>No schema provided</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormPreview;\r\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ1B,MAAMC,WAAuC,GAAGA,CAAC;EAAEC,MAAM;EAAEC,QAAQ;EAAEC;AAAY,CAAC,KAAK;EACrF;;EAEA,oBACEJ,OAAA;IAAAK,QAAA,EAEGH,MAAM,IAAIA,MAAM,CAACI,MAAM,GACtBJ,MAAM,CAACI,MAAM,CAACC,GAAG,CAAC,CAACC,KAAU,EAAEC,KAAa,kBAC1CT,OAAA;MAAiBU,SAAS,EAAC,MAAM;MAAAL,QAAA,gBAC/BL,OAAA;QAAOW,OAAO,EAAEH,KAAK,CAACI,IAAK;QAACF,SAAS,EAAC,mBAAmB;QAAAL,QAAA,EACtDG,KAAK,CAACK;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eACRjB,OAAA;QACEkB,EAAE,EAAEV,KAAK,CAACI,IAAK;QACfA,IAAI,EAAEJ,KAAK,CAACI,IAAK;QACjBO,IAAI,EAAEX,KAAK,CAACW,IAAK;QACjBC,KAAK,EAAEjB,QAAQ,CAACK,KAAK,CAACI,IAAI,CAAC,IAAI,EAAG;QAClCS,QAAQ,EAAGC,CAAC,IAAKlB,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAE,CAACK,KAAK,CAACI,IAAI,GAAGU,CAAC,CAACC,MAAM,CAACH;QAAM,CAAC,CAAE;QAC5EV,SAAS,EAAC;MAA8C;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC;IAAA,GAXMR,KAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAYV,CACN,CAAC,gBAEFjB,OAAA;MAAAK,QAAA,EAAG;IAAkB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACzB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACO,EAAA,GA3BIvB,WAAuC;AA6B7C,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}